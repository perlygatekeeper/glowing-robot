https://www.experts-exchange.com/questions/23594359/'single-track-gray-code'-sought-for-encoding-360-degrees-with-9-sensors.html
http://etzion.net.technion.ac.il/publications/
http://etzion.net.technion.ac.il/files/2016/02/P54.pdf and
http://etzion.net.technion.ac.il/files/2016/02/P36.pdf

Check out this paper:  http://www.cs.technion.ac.il/~etzion/PUB/Gray1.pdf

It is one of the Key references in the Hiltgen and Patterson paper.

Look at the Appendix on page 788 and the Length 9 Table.

If you string these 56 9-bit Necklaces together, you will get 504 position single-track gray code.

A 360 position code will require 40 of the 9-Bit Necklaces.  
You have to maintain the 1-bit change between Necklaces.

For example, you can go from Code_01 [0 0000 0001] to Code_10 [0 0010 0001] 
to generate a 48 x 9 = 432 position code.

I'm pretty sure you can make further reductions.




 
 LVL 27
 Active today
 Expert Commentby:d-glitch
 ID: 221261462008-07-30
 Try this....
 https://filedb.experts-exchange.com/incoming/2008/07_w31/46253/9x360-Single-Track-Gray-Code.PNG
  
  LVL 2
  Author Commentby:gary_williams
  ID: 221269342008-07-30
  Now we're getting somewhere!

  I noticed I could skip the 16 necklaces from 000111001 to 001101011, inclusive, to shorten the list from 56 to 40.
  I still have to check whether my strung-together list is correct, but it looks promising.
   
   LVL 2
   Author Commentby:gary_williams
   ID: 221276422008-07-31
   Based on d-glitch's input, I constructed the following single-track gray code for encoding angle in degrees,
   with nine sensors spaced 40 degrees apart.

001100000000000000000011111100111111100000011111000000011111000111111110011100000000000111100111001111110000011111100000000000000011110001111111111111111100000000000000000011111111100001100000000000000000000000000000000111111111111111111100011111000000000000000000000000001111111000000111100000000000000000111111111111111111111111111111111111111111111111111111
0 ---- 359
  11                  111111  1111111      11111       11111   11111111  111           1111  111  111111     111111               1111   11111111111111111                  111111111    11                                1111111111111111111   11111                          1111111      1111                 111111111111111111111111111111111111111111111111111111

20 slots need to be cut into 360 circle (
     1  002 -  2  11
     2  022 -  6  111111
     3  030 -  7  1111111
     4  043 -  5  11111
     5  055 -  5  11111
     6  063 -  8  11111111
     7  073 -  3  111
     8  087 -  4  1111
     9  093 -  3  111
    10  098 -  6  111111
    11  109 -  6  111111
    12  130 -  4  1111
    13  137 - 17  11111111111111111
    14  172 -  9  111111111
    15  185 -  2  11
    16  219 - 19  1111111111111111111
    17  241 -  5  11111
    18  272 -  7  1111111
    19  285 -  4  1111
    20  306 - 54  111111111111111111111111111111111111111111111111111111 (72 - 19 = 53 + 1 = 54)

0011000000000000000000111111001111111000  sensor 1
0001111100000001111100011111111001110000  sensor 2
0000000111100111001111110000011111100000  sensor 3
0000000000111100011111111111111111000000  sensor 4
0000000000001111111110000110000000000000  sensor 5
0000000000000000000111111111111111111100  sensor 6
0111110000000000000000000000000011111110  sensor 8
0000011110000000000000000011111111111111  sensor 8
1111111111111111111111111111111111111111  sensor 9
    
    LVL 2
    Author Closing Commentby:gary_williams
    ID: 314801012008-07-31
    This was exactly the information I needed to construct the code I wanted.


TABLE I
BEST KNOWN LENGTH n SINGLE-TRACK GRAY CODES
(First column: Length 12. Second column: Number of necklaces in
L(n). Third column: Period of resulting single-track Gray code.)
n Number of Necklaces Period of
in C(n) Resulting Code
9 56 504
10 96 960
11 186 2046
12 330 3960
13 630 8190
14 1152 16128
15 2182 32130 

Length 9:
     123456789   123456789   123456789   123456789
 1  [000000001] [001010001] [100101101] [110111011]
 2  [000000101] [011010001] [100100101] [110101011]
 3  [100000101] [010010001] [110100101] [010101011]
 4  [110000101] [010110001] [010100101] [011101011]
 5  [010000101] [011110001] [011100101] [111101011]
 6  [010000111] [011111001] [001100101] [101101011]
 7  [010000011] [001111001] [001100111] [101101111]
 8  [011000011] [000111001] [001101111] [111101111]
 9  [001000011] [000110011] [001101011] [111001111]
10  [001000001] [000110111] [001101001] [110001111]
11  [001100001] [000110111] [101101001] [100001111]
12  [000100001] [000110101] [111101001] [000001111]
13  [000110001] [000111101] [110101001] [000000111]
14  [001110001] [100111101] [110111001] [000000011]

Length 9:

000000001
000000101
100000101
110000101
010000101
010000111
010000011
011000011
001000011
001000001
001100001
000100001
000110001
001110001
001010001
011010001
010010001
010110001
011110001
011111001
001111001
000111001 <-
000110011 <-
000110111 <-
000110111 <-
000110101 <-
000111101 <-
100111101 <-
100101101 <-
100100101 <-
110100101 <-
010100101 <-
011100101 <-
001100101 <-
001100111 <-
001101111 <-
001101011 <-
001101001
101101001
111101001
110101001
110111001
110111011
110101011
010101011
011101011
111101011
101101011
101101111
111101111
111001111
110001111
100001111
000001111
000000111
000000011


000000001
000000101
100000101
110000101
010000101
010000111
010000011
011000011
001000011
001000001
001100001
000100001
000110001
001110001
001010001
011010001
010010001
010110001
011110001
011111001
001111001
001101001
101101001
111101001
110101001
110111001
110111011
110101011
010101011
011101011
111101011
101101011
101101111
111101111
111001111
110001111
100001111
000001111
000000111
000000011

------------------------------



001110001
001010001
011010001
010010001
010110001
011110001
011111001
001111001
000111001 <-
000110011 <-
000110111 <-
000110111 <-

000110101 <-
000111101 <-
100111101 <-
100101101 <-

000110001
000100001
001100001
001000001
000000001

000000101
010000101
110000101
100000101
100100101 <-
110100101 <-
010100101 <-
011100101 <-
001100101 <-
001100111 <-
001101111 <-
001101011 <-
001101001
101101001
111101001
110101001
110111001
110111011
110101011
010101011
011101011
111101011
101101011
101101111
111101111
111001111
110001111
100001111
000001111
000000111
010000111
010000011
011000011
001000011
000000011




---------------------------
alternative 16 code removal (from 54 to 40) 


remove these
001110001
001010001
011010001
010010001
010110001
011110001
011111001
001111001
000111001 <-
000110011 <-
000110111 <-
000110111 <-
000000101
010000101
110000101
100000101

keep these
000000001
001000001
001100001
000100001
000110001
000110101 <-
000111101 <-
100111101 <-
100101101 <-
100100101 <-
110100101 <-
010100101 <-
011100101 <-
001100101 <-
001100111 <-
001101111 <-
001101011 <-
001101001
101101001
111101001
110101001
110111001
110111011
110101011
010101011
011101011
111101011
101101011
101101111
111101111
111001111
110001111
100001111
000001111
000000111
010000111
010000011
011000011
001000011
000000011

        3 2 2 2 1 1      
        2 8 4 0 6 2 8 4 
        0 0 0 0 0 0 0 0 0
-------------------------
     1	              1 1 <- slot #1 starts at   1 and is 58 long
     2	    A         1 1 <- slot #A starts at 242 and is  2 long
     3	  E 1         1 1 <- slot #E starts at 283 and is  3 long
     4	  1           1 1
     5	  1         3 1 1 <- slot #3 starts at  85 and is  8 long
     6	            1 1 1
     7	          5 1 1 1 <- slot #5 starts at 127 and is 19 long
     8	M         1 1 1 1 <- slot #M starts at 328 and is  7 long
     9	1 F       1 1 1 1 <- slot #F starts at 289 and is  3 long
    10	1 1 B     1 1 1 1 <- slot #B starts at 250 and is  6 long
    11	1 1 1 9   1 1 1 1 <- slot #9 starts at 211 and is 28 long
    12	1   1 1   1 1 1 1
    13	1   1 1   1   1 1
    14	1 G 1 1   1   1 1 <- slot #G starts at 294 and is  8 long
    15	  1 1 1   1   1 1
    16	  1   1   1   1 1
    17	P 1   1   1   1 1 <- slot #P starts at 337 and is  6 long
    18	1 1   1 7 1   1 1 <- slot #7 starts at 178 and is  2 long
    19	1 1   1 1 1     1
    20	1 1   1   1     1
    21	1 1 C 1   1     1 <- slot #C starts at 261 and is  8 long
    22	1   1 1   1     1
    23	    1 1   1     1
    24	    1 1   1   2 1 <- slot #2 starts at  64 and is  3 long
    25	    1 1   1 4 1 1 <- slot #4 starts at 105 and is 11 long
    26	    1 1     1 1 1
    27	    1 1     1   1
    28	  H 1 1     1   1 <- slot #H starts at 308 and is  3 long
    29	  1   1     1   1
    30	W 1   1     1   1 <- slot #W starts at 350 and is  4 long
    31	1     1     1   1
    32	1     1   6 1   1 <- slot #6 starts at 152 and is  3 long
    33	1     1 8 1 1   1 <- slot #8 starts at 193 and is  4 long
    34	      1 1 1 1   1
    35	      1 1   1   1
    36	      1 1       1
    37	      1         1
    38	    D 1         1 <- slot #D starts at 277 and is  2 long
    39	    1           1
    40	                1

 slot #1 starts at   1 and is 58 long (ends at  66)
 slot #2 starts at  64 and is  3 long (ends at  66)
 slot #3 starts at  85 and is  8 long (ends at  92)
 slot #4 starts at 105 and is 11 long (ends at 166)
 slot #5 starts at 127 and is 19 long (ends at 166)
 slot #6 starts at 152 and is  3 long (ends at 166)
 slot #7 starts at 178 and is  2 long (ends at 166)
 slot #8 starts at 193 and is  4 long (ends at 196)
 slot #9 starts at 211 and is 28 long (ends at 238)
 slot #A starts at 242 and is  2 long (ends at 243)
 slot #B starts at 250 and is  6 long (ends at 255)
 slot #C starts at 261 and is  8 long (ends at 268)
 slot #D starts at 278 and is  2 long (ends at 279)
 slot #E starts at 283 and is  3 long (ends at 286)
 slot #F starts at 289 and is  3 long (ends at 291)
 slot #G starts at 294 and is  8 long (ends at 301)
 slot #H starts at 308 and is  3 long (ends at 310)
 slot #M starts at 328 and is  7 long (ends at 334)
 slot #P starts at 337 and is  6 long (ends at 342)
 slot #W starts at 350 and is  4 long (ends at 353)
