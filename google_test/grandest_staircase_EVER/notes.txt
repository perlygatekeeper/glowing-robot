'''
 2   3   	  3  2	
 3   6   	  6  3	
 4  10   	 10  4	
 5  15   	 15  5	
 6  21   	 21  6	
 7  28   	 28  7	
 8  36   	 36  8	
 9  45   	 45  9	
10  55   	 55 10	
11  66   	 66 11	
12  78   	 78 12	
13  91   	 91 13	
14 105   	105 14	
15 120  	120 15	
16 136   	136 16	
17 153   	153 17	
18 171   	171 18	
19 190   	190 19	
--------------------------
N = 1 -> 0
---------
N = 2 -> 0
---------
 3: {2: 1}
N = 3 -> 1
2, 1            2:1
---------
 4: {3: 1}
N = 4 -> 1
3, 1            3:1
---------
 5: {3: 1, 4: 2}
N = 5 -> 2
4, 1            4:2
3, 2            3:1
---------
 6: {3: 1, 4: 2, 5: 3}
N = 6 -> 3
5, 1            5:3
4, 2            4:2
3, 2, 1         3:1
---------
 7: {4: 2, 5: 3, 6: 4}
N = 7 -> 4
6, 1            6:4
5, 2            5:3
4, 3            4:2
4, 2, 1       
---------
 8: {4: 1, 5: 3, 6: 4, 7: 5}
N = 8 -> 5
7, 1            7:5
6, 2            6:4
5, 3            5:3
5, 2, 1
4, 3, 1         4:1
---------
 9: {8: 8, 4: 2, 5: 4, 6: 6, 7: 7}
N = 9 -> 7   
8, 1            8:7
7, 2            7:6
6, 3            6:5
6, 2, 1
5, 4            5:3
5, 3, 1
4, 3, 2         4:1
---------
 10: {4: 3, 5: 5, 6: 7, 7: 9, 8: 10, 9: 11}
 11: {5: 3, 6: 6, 7: 8, 8: 10, 9: 11, 10: 12}
 12: {5: 4, 6: 7, 7: 10, 8: 12, 9: 14, 10: 15, 11: 16}
 13: {5: 5, 6: 9, 7: 13, 8: 16, 9: 18, 10: 20, 11: 21, 12: 22}
 14: {5: 8, 6: 13, 7: 17, 8: 21, 9: 24, 10: 26, 11: 28, 12: 29, 13: 30}
N = 10 -> 9
9, 1            9:9
8, 2            8:8
7, 3            7:7
7, 2, 1
6, 4            6:5
6, 3, 1
5, 4, 1         5:3
5, 3, 2
4, 3, 2, 1      4:1
---------
N = 15 -> 26
14, 1          14:26 <- N-1
13, 2          13:25
12, 3          12:24
12, 2, 1
11, 4          11:22
11, 3, 1
10, 5          10:20
10, 4, 1
10, 3, 2
 9, 6           9:17
 9, 5, 1
 9, 4, 2
 9, 3, 2, 1
 8, 7           8:13    m = 7
 8, 6, 1                7:6=4
 8, 5, 2
 8, 4, 3
 8, 4, 2, 1
 7, 6, 2        7:8
 7, 5, 3
 7, 5, 2, 1
 7, 4, 3, 1
 6, 5, 4        6:4     m = 9   9:5=3
 6, 5, 3, 1
 6, 4, 3, 2
 5, 4, 3, 2, 1  5:1  <- smallist_stairway_height
---------
 N
 N-1, 1
 N-2, 2
 N-3, 3 
 N-3, 2, 1
 .
 .
 .
 N-m, m  if m is less than N-m
 N-m, all solutions for m starting with (N-m)-1 or lower
---------
'''

def solution(n):
    # generate triangle numbers from 1 to 19
    triangle_numbers = []
    for i in range(1,20):
           triangle_numbers[i] = int( i * (i+1) / 2 )
    for i in range(3,201):
        if i in trianle_numbers:
            number = trianle_numbers[i]
        triangle_indices[i] = number
    staircases = {}
    for N in range(3,15):
        staircases[N] = {}
        smallest_stairway_height = triangle_indices[N]
        for stairway_height in range(smallest_stairway_height,N):
            # m is # of bricks left to build rest of stairway
            m = N - stairway_height
            if m < stairway_height:
              staircases[N][stairway_height] = 1
            staircases[N][stairway_height] += staircases[m][stairway_height-1]
    return staircases[n][n-1]
            
                                                                                                                                                                                    
