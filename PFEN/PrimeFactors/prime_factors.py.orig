import gzip
import re

# Define the file name
prime_factor_file = __file__.replace('.py.orig', '.txt.gz')

try:
    with gzip.open(prime_factor_file, 'rt') as z:
        for line in z:
            if '=' not in line:
                continue

            print(line.strip())
            line = line.strip()

            # Extract number and RHS
            match = re.match(r'(^\d+)=(.*)', line)
            if match:
                number, RHS = match.groups()
                number = int(number)

                # Check if the number is a prime
                prime_match = re.search(r'\((\d+)\)', line)
                if prime_match:
                    prime = int(prime_match.group(1))
                    print(f" {number} is the {prime}-th prime.")

                # Check for prime factor sequence
                if ';' in RHS:
                    prime_factor_sequence = int(RHS.split(';')[-1])
                    print(f" {number} is a prime factor sequence: {prime_factor_sequence}")
                    RHS = RHS.split(';')[0]

                # Parse factorization if it's a product of primes
                if re.match(r'^[0-9x^]+$', RHS):
                    def parse_factorization(factorization_string):
                        factors = factorization_string.split('x')
                        factor_exponents = {}
                        for prime_factor in factors:
                            factor, _, exponent = prime_factor.partition('^')
                            factor = int(factor)
                            exponent = int(exponent) if exponent else 1
                            factor_exponents[factor] = exponent
                        print(" ", ", ".join(factors))
                        return factor_exponents

                    parse_factorization(RHS)

except FileNotFoundError:
    print(f"Cannot read from '{prime_factor_file}': File not found.")
except OSError as e:
    print(f"Error reading gzip file: {e}")
